// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./db.sqlite"
    // url      = env("DATABASE_URL")
}

model Example {
    id String @id @default(cuid())
}

model movie {
    movieId           String  @id @default(cuid())
    id                Int?
    title             String?
    poster            String?
    user              User?   @relation(fields: [userId], references: [id])
    userId            String?
    backdrop_path     String?
    release_date      String?
    name              String?
    original_language String?
    original_name     String?
    overview          String?
    popularity        Int?
    poster_path       String?
    vote_average      Float?
    vote_count        Int?
}

// Neccessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id                  String    @id @default(cuid())
    name                String?
    email               String?   @unique
    emailVerified       DateTime?
    image               String?
    accounts            Account[]
    sessions            Session[]
    stripeCustomerId    String?
    isActive            Boolean   @default(false)
    userSubscription    String    @default("notier")
    subscriptionCreated String?
    movie               movie[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
